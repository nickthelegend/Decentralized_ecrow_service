{
  "hints": {
    "createApplication(address)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createEvent(pay,(uint64,string,address,uint64,string,uint64,uint64,uint64))uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimEvent(pay,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "maintainerAddress": {
          "type": "bytes",
          "key": "maintainerAddress"
        },
        "totalEvents": {
          "type": "uint64",
          "key": "totalEvents"
        },
        "lastEventId": {
          "type": "uint64",
          "key": "lastDropId"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 2
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Events",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "maintainerAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createEvent",
        "args": [
          {
            "name": "feeAndMbrPayment",
            "type": "pay"
          },
          {
            "name": "eventConfig",
            "type": "(uint64,string,address,uint64,string,uint64,uint64,uint64)"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "claimEvent",
        "args": [
          {
            "name": "feeAndMbrPayment",
            "type": "pay"
          },
          {
            "name": "eventID",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}