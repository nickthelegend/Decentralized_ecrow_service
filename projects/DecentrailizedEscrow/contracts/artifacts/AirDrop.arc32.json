{
  "hints": {
    "createApplication(address,string,uint64,uint64,uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optinAsset()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "fundDrop(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimDrop()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "assetID": {
          "type": "uint64",
          "key": "assetID"
        },
        "creatorAddress": {
          "type": "bytes",
          "key": "creatorAddress"
        },
        "tokenName": {
          "type": "bytes",
          "key": "tokenName"
        },
        "amountRemaining": {
          "type": "uint64",
          "key": "amountRemaining"
        },
        "numClaims": {
          "type": "uint64",
          "key": "numClaims"
        },
        "maxClaims": {
          "type": "uint64",
          "key": "maxClaims"
        },
        "expiryDate": {
          "type": "uint64",
          "key": "expiryDate"
        },
        "amountToSend": {
          "type": "uint64",
          "key": "amountToSend"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 6
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "AirDrop",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "creatorAddress",
            "type": "address"
          },
          {
            "name": "tokenName",
            "type": "string"
          },
          {
            "name": "assetID",
            "type": "uint64"
          },
          {
            "name": "numClaims",
            "type": "uint64"
          },
          {
            "name": "maxClaims",
            "type": "uint64"
          },
          {
            "name": "expiryDate",
            "type": "uint64"
          },
          {
            "name": "amountToSend",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optinAsset",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "fundDrop",
        "args": [
          {
            "name": "assetTxn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claimDrop",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}