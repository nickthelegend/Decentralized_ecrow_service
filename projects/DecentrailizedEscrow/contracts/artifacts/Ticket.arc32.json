{
  "hints": {
    "createApplication(string,string,uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createTickets(string,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "registerEvent(string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "withDrawFunds(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "creatorAddress": {
          "type": "bytes",
          "key": "creatorAddress"
        },
        "eventName": {
          "type": "bytes",
          "key": "eventName"
        },
        "location": {
          "type": "bytes",
          "key": "location"
        },
        "startTime": {
          "type": "uint64",
          "key": "startTime"
        },
        "endTime": {
          "type": "uint64",
          "key": "endTime"
        },
        "registeredCount": {
          "type": "uint64",
          "key": "registeredCount"
        },
        "eventCost": {
          "type": "uint64",
          "key": "eventCost"
        },
        "assetID": {
          "type": "uint64",
          "key": "assetID"
        },
        "ticketsRemaining": {
          "type": "uint64",
          "key": "ticketsRemaining"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 6
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Ticket",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "eventName",
            "type": "string"
          },
          {
            "name": "location",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "uint64"
          },
          {
            "name": "endTime",
            "type": "uint64"
          },
          {
            "name": "eventCost",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createTickets",
        "args": [
          {
            "name": "assetUrl",
            "type": "string"
          },
          {
            "name": "totalTickets",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "registerEvent",
        "args": [
          {
            "name": "email",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "withDrawFunds",
        "args": [
          {
            "name": "funds",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}