{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createBox()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "depositfundsPlayer1(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "depositfundsPlayer2(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "sendFunds(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "joinGame(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "player1turn(string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "player2turn(string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setWinner(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "player1": {
          "type": "bytes",
          "key": "player1"
        },
        "player2": {
          "type": "bytes",
          "key": "player2"
        },
        "depositedAmount": {
          "type": "uint64",
          "key": "depositedAmount"
        },
        "maxDepositAmount": {
          "type": "uint64",
          "key": "maxDepositAmount"
        },
        "winner": {
          "type": "bytes",
          "key": "winner"
        },
        "player1Chances": {
          "type": "uint64",
          "key": "player1Chances"
        },
        "player2Chances": {
          "type": "uint64",
          "key": "player2Chances"
        },
        "status": {
          "type": "bytes",
          "key": "status"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 4,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDAgMzIgNDUKYnl0ZWNibG9jayAweDY0NjU3MDZmNzM2OTc0NjU2NDQxNmQ2Zjc1NmU3NCAweDcwNmM2MTc5NjU3MjMyIDB4NzA2YzYxNzk2NTcyMzE0ZDZmNzY2NSAweDcwNmM2MTc5NjU3MjMyNGQ2Zjc2NjUgMHg3MDZjNjE3OTY1NzIzMSAweDcwNmM2MTc5NjU3MjMxNDM2ODYxNmU2MzY1NzMgMHg3MDZjNjE3OTY1NzIzMjQzNjg2MTZlNjM2NTczCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNS40Ci8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gY3JlYXRlQXBwbGljYXRpb24oKXZvaWQKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCS8vIGV4ZWN1dGUgY3JlYXRlQXBwbGljYXRpb24oKXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKCk6IHZvaWQKY3JlYXRlQXBwbGljYXRpb246Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjIzCgkvLyB0aGlzLmRlcG9zaXRlZEFtb3VudC52YWx1ZSA9IDAKCWJ5dGVjIDAgLy8gICJkZXBvc2l0ZWRBbW91bnQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjI0CgkvLyB0aGlzLm1heERlcG9zaXRBbW91bnQudmFsdWUgPSA1CglwdXNoYnl0ZXMgMHg2ZDYxNzg0NDY1NzA2ZjczNjk3NDQxNmQ2Zjc1NmU3NCAvLyAibWF4RGVwb3NpdEFtb3VudCIKCXB1c2hpbnQgNQoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gY3JlYXRlQm94KCl2b2lkCiphYmlfcm91dGVfY3JlYXRlQm94OgoJLy8gZXhlY3V0ZSBjcmVhdGVCb3goKXZvaWQKCWNhbGxzdWIgY3JlYXRlQm94CglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBjcmVhdGVCb3goKTogdm9pZApjcmVhdGVCb3g6Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjI5CgkvLyB0aGlzLnBsYXllcjFNb3ZlLmNyZWF0ZSg0NSkKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxTW92ZSIKCWludGMgMyAvLyA0NQoJYm94X2NyZWF0ZQoJcG9wCgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czozMAoJLy8gdGhpcy5wbGF5ZXIyTW92ZS5jcmVhdGUoNDUpCglieXRlYyAzIC8vICAicGxheWVyMk1vdmUiCglpbnRjIDMgLy8gNDUKCWJveF9jcmVhdGUKCXBvcAoJcmV0c3ViCgovLyBkZXBvc2l0ZnVuZHNQbGF5ZXIxKHBheSl2b2lkCiphYmlfcm91dGVfZGVwb3NpdGZ1bmRzUGxheWVyMToKCS8vIGZ0cmFuc3g6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludGMgMCAvLyAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDAgLy8gIHBheQoJPT0KCgkvLyBhcmd1bWVudCAwIChmdHJhbnN4KSBmb3IgZGVwb3NpdGZ1bmRzUGxheWVyMSBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBleGVjdXRlIGRlcG9zaXRmdW5kc1BsYXllcjEocGF5KXZvaWQKCWNhbGxzdWIgZGVwb3NpdGZ1bmRzUGxheWVyMQoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZGVwb3NpdGZ1bmRzUGxheWVyMShmdHJhbnN4IDogUGF5VHhuKTogdm9pZApkZXBvc2l0ZnVuZHNQbGF5ZXIxOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czozNQoJLy8gYXNzZXJ0KAoJLy8gICAgICAgICAgICF0aGlzLnBsYXllcjEuZXhpc3RzCgkvLyAgICAgICAgICkKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGVjIDQgLy8gICJwbGF5ZXIxIgoJYXBwX2dsb2JhbF9nZXRfZXgKCXN3YXAKCXBvcAoJIQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czozOQoJLy8gdmVyaWZ5UGF5VHhuKGZ0cmFuc3gsIHsKCS8vICAgICAgICAgICAgIHJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICAgICAgfSkKCS8vIHZlcmlmeSByZWNlaXZlcgoJZnJhbWVfZGlnIC0xIC8vIGZ0cmFuc3g6IFBheVR4bgoJZ3R4bnMgUmVjZWl2ZXIKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoiZnRyYW5zeCIsImZpZWxkIjoicmVjZWl2ZXIiLCJleHBlY3RlZCI6InRoaXMuYXBwLmFkZHJlc3MifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czo0MgoJLy8gdGhpcy5kZXBvc2l0ZWRBbW91bnQudmFsdWUgKz0gZnRyYW5zeC5hbW91bnQKCWJ5dGVjIDAgLy8gICJkZXBvc2l0ZWRBbW91bnQiCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0xIC8vIGZ0cmFuc3g6IFBheVR4bgoJZ3R4bnMgQW1vdW50CgkrCglieXRlYyAwIC8vICAiZGVwb3NpdGVkQW1vdW50IgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjQzCgkvLyB0aGlzLnBsYXllcjEudmFsdWU9dGhpcy50eG4uc2VuZGVyCglieXRlYyA0IC8vICAicGxheWVyMSIKCXR4biBTZW5kZXIKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGRlcG9zaXRmdW5kc1BsYXllcjIocGF5KXZvaWQKKmFiaV9yb3V0ZV9kZXBvc2l0ZnVuZHNQbGF5ZXIyOgoJLy8gZnRyYW5zeDogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50YyAwIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMCAvLyAgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKGZ0cmFuc3gpIGZvciBkZXBvc2l0ZnVuZHNQbGF5ZXIyIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgZGVwb3NpdGZ1bmRzUGxheWVyMihwYXkpdm9pZAoJY2FsbHN1YiBkZXBvc2l0ZnVuZHNQbGF5ZXIyCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBkZXBvc2l0ZnVuZHNQbGF5ZXIyKGZ0cmFuc3ggOiBQYXlUeG4pOiB2b2lkCmRlcG9zaXRmdW5kc1BsYXllcjI6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjQ4CgkvLyBhc3NlcnQoCgkvLyAgICAgICAgICAgIXRoaXMucGxheWVyMi5leGlzdHMKCS8vICAgICAgICAgKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZWMgMSAvLyAgInBsYXllcjIiCglhcHBfZ2xvYmFsX2dldF9leAoJc3dhcAoJcG9wCgkhCglhc3NlcnQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjUyCgkvLyB2ZXJpZnlQYXlUeG4oZnRyYW5zeCwgewoJLy8gICAgICAgICAgICAgcmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICAgICAgICB9KQoJLy8gdmVyaWZ5IHJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8gZnRyYW5zeDogUGF5VHhuCglndHhucyBSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJmdHJhbnN4IiwiZmllbGQiOiJyZWNlaXZlciIsImV4cGVjdGVkIjoidGhpcy5hcHAuYWRkcmVzcyJ9Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjU1CgkvLyB0aGlzLmRlcG9zaXRlZEFtb3VudC52YWx1ZSArPSBmdHJhbnN4LmFtb3VudAoJYnl0ZWMgMCAvLyAgImRlcG9zaXRlZEFtb3VudCIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTEgLy8gZnRyYW5zeDogUGF5VHhuCglndHhucyBBbW91bnQKCSsKCWJ5dGVjIDAgLy8gICJkZXBvc2l0ZWRBbW91bnQiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6NTYKCS8vIHRoaXMucGxheWVyMi52YWx1ZT10aGlzLnR4bi5zZW5kZXIKCWJ5dGVjIDEgLy8gICJwbGF5ZXIyIgoJdHhuIFNlbmRlcgoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gc2VuZEZ1bmRzKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3NlbmRGdW5kczoKCS8vIHBsYXllcjogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgMiAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAwIChwbGF5ZXIpIGZvciBzZW5kRnVuZHMgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgc2VuZEZ1bmRzKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBzZW5kRnVuZHMKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIHNlbmRGdW5kcyhwbGF5ZXI6IEFkZHJlc3MpOiB2b2lkCnNlbmRGdW5kczoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6NjAKCS8vIGFzc2VydCgKCS8vICAgICAgICAgICAgIHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5hcHAuY3JlYXRvcgoJLy8gICAgICAgICAgICkKCXR4biBTZW5kZXIKCXR4bmEgQXBwbGljYXRpb25zIDAKCWFwcF9wYXJhbXNfZ2V0IEFwcENyZWF0b3IKCXBvcAoJPT0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6NjMKCS8vIHNlbmRQYXltZW50KHsKCS8vICAgICAgICAgICAgIHJlY2VpdmVyOiBwbGF5ZXIsCgkvLyAgICAgICAgICAgICBhbW91bnQ6IDkwMDAwMDAsCgkvLyAgICAgICAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czo2NAoJLy8gcmVjZWl2ZXI6IHBsYXllcgoJZnJhbWVfZGlnIC0xIC8vIHBsYXllcjogQWRkcmVzcwoJaXR4bl9maWVsZCBSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6NjUKCS8vIGFtb3VudDogOTAwMDAwMAoJcHVzaGludCA5MDAwMDAwCglpdHhuX2ZpZWxkIEFtb3VudAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludGMgMSAvLyAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjY3CgkvLyB0aGlzLmRlcG9zaXRlZEFtb3VudC52YWx1ZSA9IDAKCWJ5dGVjIDAgLy8gICJkZXBvc2l0ZWRBbW91bnQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gam9pbkdhbWUoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfam9pbkdhbWU6CgkvLyBwbGF5ZXI6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDIgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMCAocGxheWVyKSBmb3Igam9pbkdhbWUgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgam9pbkdhbWUoYWRkcmVzcyl2b2lkCgljYWxsc3ViIGpvaW5HYW1lCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBqb2luR2FtZShwbGF5ZXI6IEFkZHJlc3MpOiB2b2lkCmpvaW5HYW1lOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czo3NQoJLy8gYXNzZXJ0KAoJLy8gICAgICAgICAgICAgIXRoaXMucGxheWVyMi5leGlzdHMKCS8vICAgICAgICAgICApCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglieXRlYyAxIC8vICAicGxheWVyMiIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCSEKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6NzkKCS8vIHRoaXMucGxheWVyMi52YWx1ZSA9cGxheWVyCglieXRlYyAxIC8vICAicGxheWVyMiIKCWZyYW1lX2RpZyAtMSAvLyBwbGF5ZXI6IEFkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHBsYXllcjF0dXJuKHN0cmluZyl2b2lkCiphYmlfcm91dGVfcGxheWVyMXR1cm46CgkvLyBtb3ZlOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWV4dHJhY3QgMiAwCgoJLy8gZXhlY3V0ZSBwbGF5ZXIxdHVybihzdHJpbmcpdm9pZAoJY2FsbHN1YiBwbGF5ZXIxdHVybgoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gcGxheWVyMXR1cm4obW92ZSA6IHN0cmluZyk6IHZvaWQKcGxheWVyMXR1cm46Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjg2CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09IHRoaXMucGxheWVyMS52YWx1ZSApCgl0eG4gU2VuZGVyCglieXRlYyA0IC8vICAicGxheWVyMSIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czo4OAoJLy8gdGhpcy5wbGF5ZXIxTW92ZS52YWx1ZSA9IG1vdmUKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxTW92ZSIKCWR1cAoJYm94X2RlbAoJcG9wCglmcmFtZV9kaWcgLTEgLy8gbW92ZTogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJYm94X3B1dAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6ODkKCS8vIHRoaXMucGxheWVyMUNoYW5jZXMudmFsdWUrPTEKCWJ5dGVjIDUgLy8gICJwbGF5ZXIxQ2hhbmNlcyIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMQoJKwoJYnl0ZWMgNSAvLyAgInBsYXllcjFDaGFuY2VzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gcGxheWVyMnR1cm4oc3RyaW5nKXZvaWQKKmFiaV9yb3V0ZV9wbGF5ZXIydHVybjoKCS8vIG1vdmU6IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZXh0cmFjdCAyIDAKCgkvLyBleGVjdXRlIHBsYXllcjJ0dXJuKHN0cmluZyl2b2lkCgljYWxsc3ViIHBsYXllcjJ0dXJuCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBwbGF5ZXIydHVybihtb3ZlIDogc3RyaW5nKTogdm9pZApwbGF5ZXIydHVybjoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6OTYKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT0gdGhpcy5wbGF5ZXIyLnZhbHVlICkKCXR4biBTZW5kZXIKCWJ5dGVjIDEgLy8gICJwbGF5ZXIyIgoJYXBwX2dsb2JhbF9nZXQKCT09Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjk4CgkvLyB0aGlzLnBsYXllcjJNb3ZlLnZhbHVlID0gbW92ZQoJYnl0ZWMgMyAvLyAgInBsYXllcjJNb3ZlIgoJZHVwCglib3hfZGVsCglwb3AKCWZyYW1lX2RpZyAtMSAvLyBtb3ZlOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0Cglib3hfcHV0CgoJLy8gY29udHJhY3RzL0dhbWUuYWxnby50czo5OQoJLy8gdGhpcy5wbGF5ZXIyQ2hhbmNlcy52YWx1ZSs9MQoJYnl0ZWMgNiAvLyAgInBsYXllcjJDaGFuY2VzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyA2IC8vICAicGxheWVyMkNoYW5jZXMiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBzZXRXaW5uZXIoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfc2V0V2lubmVyOgoJLy8gd2lubmVyOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyAyIC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKHdpbm5lcikgZm9yIHNldFdpbm5lciBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBzZXRXaW5uZXIoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHNldFdpbm5lcgoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gc2V0V2lubmVyKHdpbm5lciA6IEFkZHJlc3MpOiB2b2lkCnNldFdpbm5lcjoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9HYW1lLmFsZ28udHM6MTA4CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09IHRoaXMuYXBwLmNyZWF0b3IpCgl0eG4gU2VuZGVyCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglhcHBfcGFyYW1zX2dldCBBcHBDcmVhdG9yCglwb3AKCT09Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvR2FtZS5hbGdvLnRzOjExMAoJLy8gdGhpcy53aW5uZXIudmFsdWUgPSB3aW5uZXIKCXB1c2hieXRlcyAweDc3Njk2ZTZlNjU3MiAvLyAid2lubmVyIgoJZnJhbWVfZGlnIC0xIC8vIHdpbm5lcjogQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweGVhMDQ1MDM2IC8vIG1ldGhvZCAiY3JlYXRlQm94KCl2b2lkIgoJcHVzaGJ5dGVzIDB4MmRlMzVhYjUgLy8gbWV0aG9kICJkZXBvc2l0ZnVuZHNQbGF5ZXIxKHBheSl2b2lkIgoJcHVzaGJ5dGVzIDB4ZmI4ZTcxMTAgLy8gbWV0aG9kICJkZXBvc2l0ZnVuZHNQbGF5ZXIyKHBheSl2b2lkIgoJcHVzaGJ5dGVzIDB4M2ExOWQwZGUgLy8gbWV0aG9kICJzZW5kRnVuZHMoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4MzdmZTlkY2MgLy8gbWV0aG9kICJqb2luR2FtZShhZGRyZXNzKXZvaWQiCglwdXNoYnl0ZXMgMHhhYmVjZWQ3NSAvLyBtZXRob2QgInBsYXllcjF0dXJuKHN0cmluZyl2b2lkIgoJcHVzaGJ5dGVzIDB4N2ZlYzA3YzQgLy8gbWV0aG9kICJwbGF5ZXIydHVybihzdHJpbmcpdm9pZCIKCXB1c2hieXRlcyAweDE5OTFmM2M0IC8vIG1ldGhvZCAic2V0V2lubmVyKGFkZHJlc3Mpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQm94ICphYmlfcm91dGVfZGVwb3NpdGZ1bmRzUGxheWVyMSAqYWJpX3JvdXRlX2RlcG9zaXRmdW5kc1BsYXllcjIgKmFiaV9yb3V0ZV9zZW5kRnVuZHMgKmFiaV9yb3V0ZV9qb2luR2FtZSAqYWJpX3JvdXRlX3BsYXllcjF0dXJuICphYmlfcm91dGVfcGxheWVyMnR1cm4gKmFiaV9yb3V0ZV9zZXRXaW5uZXIKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Game",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createBox",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "depositfundsPlayer1",
        "args": [
          {
            "name": "ftransx",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "depositfundsPlayer2",
        "args": [
          {
            "name": "ftransx",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "sendFunds",
        "args": [
          {
            "name": "player",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "joinGame",
        "args": [
          {
            "name": "player",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "player1turn",
        "args": [
          {
            "name": "move",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "player2turn",
        "args": [
          {
            "name": "move",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "setWinner",
        "args": [
          {
            "name": "winner",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}