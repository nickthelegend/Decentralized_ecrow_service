{
  "hints": {
    "createApplication(address,uint64,uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optIntoNFT(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "buyLicense(pay,string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "transferOwnership(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "payRoyalty(address,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "cancelListing()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "pricePersonal": {
          "type": "uint64",
          "key": "pricePersonal"
        },
        "priceCommercial": {
          "type": "uint64",
          "key": "priceCommercial"
        },
        "priceExclusive": {
          "type": "uint64",
          "key": "priceExclusive"
        },
        "royaltyPercent": {
          "type": "uint64",
          "key": "royaltyPercent"
        },
        "creator": {
          "type": "bytes",
          "key": "creator"
        },
        "currentOwner": {
          "type": "bytes",
          "key": "currentOwner"
        },
        "nftAssetID": {
          "type": "uint64",
          "key": "nftAssetID"
        },
        "buyerLicense": {
          "type": "bytes",
          "key": "buyerLicense"
        },
        "expectedAmount": {
          "type": "uint64",
          "key": "expectedAmount"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 6
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "RoyaltyNFTMarketplace",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "creator",
            "type": "address"
          },
          {
            "name": "pricePersonal",
            "type": "uint64"
          },
          {
            "name": "priceCommercial",
            "type": "uint64"
          },
          {
            "name": "priceExclusive",
            "type": "uint64"
          },
          {
            "name": "royaltyPercent",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIntoNFT",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buyLicense",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          },
          {
            "name": "licenseType",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "transferOwnership",
        "args": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "payRoyalty",
        "args": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "amountPaid",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "cancelListing",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}