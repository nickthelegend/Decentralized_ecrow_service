{
  "hints": {
    "createApplication(address)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createEvent((uint64,string,string,address,uint64,string,uint64,uint64,uint64,uint64))void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteEvent(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updateEvent()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "maintainerAddress": {
          "type": "bytes",
          "key": "maintainerAddress"
        },
        "totalEvents": {
          "type": "uint64",
          "key": "totalEvents"
        },
        "lastEventID": {
          "type": "uint64",
          "key": "lastEventID"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 2
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "TicketManager",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "maintainerAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createEvent",
        "args": [
          {
            "name": "eventConfig",
            "type": "(uint64,string,string,address,uint64,string,uint64,uint64,uint64,uint64)"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteEvent",
        "args": [
          {
            "name": "eventID",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updateEvent",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}