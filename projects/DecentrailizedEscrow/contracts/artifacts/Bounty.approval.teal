#pragma version 10
intcblock 1
bytecblock 0x726577617264 0x77696e6e6572

// This TEAL was generated by TEALScript v0.105.4
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(string,string,string,uint64)void
*abi_route_createApplication:
	// expiryDate: uint64
	txna ApplicationArgs 4
	btoi

	// bountyOrganization: string
	txna ApplicationArgs 3
	extract 2 0

	// cfid: string
	txna ApplicationArgs 2
	extract 2 0

	// title: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string,string,string,uint64)void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(title: string, cfid: string, bountyOrganization: string, expiryDate : uint64): void
createApplication:
	proto 4 0

	// contracts/Dev.algo.ts:18
	// this.bountyTitle.value = title
	pushbytes 0x626f756e74795469746c65 // "bountyTitle"
	frame_dig -1 // title: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/Dev.algo.ts:19
	// this.bountyCid.value = cfid
	pushbytes 0x626f756e7479436964 // "bountyCid"
	frame_dig -2 // cfid: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/Dev.algo.ts:20
	// this.bountyOrganization.value = bountyOrganization
	pushbytes 0x626f756e74794f7267616e697a6174696f6e // "bountyOrganization"
	frame_dig -3 // bountyOrganization: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/Dev.algo.ts:21
	// this.expiryDate.value = expiryDate
	pushbytes 0x65787069727944617465 // "expiryDate"
	frame_dig -4 // expiryDate: uint64
	app_global_put
	retsub

// depositReward(pay)void
*abi_route_depositReward:
	// rewardTxn: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 0 (rewardTxn) for depositReward must be a pay transaction
	assert

	// execute depositReward(pay)void
	callsub depositReward
	intc 0 // 1
	return

// depositReward(rewardTxn: PayTxn): void
depositReward:
	proto 1 0

	// contracts/Dev.algo.ts:27
	// assert(
	//     this.txn.sender == this.app.creator
	// )
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/Dev.algo.ts:31
	// verifyPayTxn(rewardTxn,
	//     {
	//         receiver: this.app.address
	//     })
	// verify receiver
	frame_dig -1 // rewardTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// transaction verification failed: {"txn":"rewardTxn","field":"receiver","expected":"this.app.address"}
	assert

	// contracts/Dev.algo.ts:36
	// this.reward.value = rewardTxn.amount
	bytec 0 //  "reward"
	frame_dig -1 // rewardTxn: PayTxn
	gtxns Amount
	app_global_put
	retsub

// setWinner(address)void
*abi_route_setWinner:
	// winner: address
	txna ApplicationArgs 1
	dup
	len
	pushint 32
	==

	// argument 0 (winner) for setWinner must be a address
	assert

	// execute setWinner(address)void
	callsub setWinner
	intc 0 // 1
	return

// setWinner(winner: Address): void
setWinner:
	proto 1 0

	// contracts/Dev.algo.ts:45
	// assert(
	//         this.txn.sender == this.app.creator
	//     )
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/Dev.algo.ts:49
	// this.winner.value= winner
	bytec 1 //  "winner"
	frame_dig -1 // winner: Address
	app_global_put
	retsub

// sendReward()void
*abi_route_sendReward:
	// execute sendReward()void
	callsub sendReward
	intc 0 // 1
	return

// sendReward(): void
sendReward:
	proto 0 0

	// contracts/Dev.algo.ts:56
	// assert(
	//         this.txn.sender == this.app.creator
	//     )
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/Dev.algo.ts:60
	// sendPayment({
	//         receiver: this.winner.value,
	//         amount: this.reward.value,
	//       })
	itxn_begin
	intc 0 //  pay
	itxn_field TypeEnum

	// contracts/Dev.algo.ts:61
	// receiver: this.winner.value
	bytec 1 //  "winner"
	app_global_get
	itxn_field Receiver

	// contracts/Dev.algo.ts:62
	// amount: this.reward.value
	bytec 0 //  "reward"
	app_global_get
	itxn_field Amount

	// Fee field not set, defaulting to 0
	pushint 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*create_NoOp:
	pushbytes 0xa5824954 // method "createApplication(string,string,string,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0xbe4f1e4b // method "depositReward(pay)void"
	pushbytes 0x1991f3c4 // method "setWinner(address)void"
	pushbytes 0x7f1811db // method "sendReward()void"
	txna ApplicationArgs 0
	match *abi_route_depositReward *abi_route_setWinner *abi_route_sendReward

	// this contract does not implement the given ABI method for call NoOp
	err