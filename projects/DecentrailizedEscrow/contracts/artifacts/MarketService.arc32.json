{
  "hints": {
    "createApplication(address,address)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optIntoAsset(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optIntoToken(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "takeFunds()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "addFundsToEscrow(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "recieveNFT(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "requiredAmount": {
          "type": "uint64",
          "key": "requiredAmount"
        },
        "paymentAmount": {
          "type": "uint64",
          "key": "paymentAmount"
        },
        "reciever": {
          "type": "bytes",
          "key": "reciever"
        },
        "asaAmt": {
          "type": "uint64",
          "key": "asaAmt"
        },
        "conditionMet": {
          "type": "bytes",
          "key": "conditionMet"
        },
        "owner": {
          "type": "bytes",
          "key": "owner"
        },
        "asa": {
          "type": "uint64",
          "key": "asa"
        },
        "assetToken": {
          "type": "uint64",
          "key": "assetToken"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 5
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "MarketService",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "worker",
            "type": "address"
          },
          {
            "name": "adminAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIntoAsset",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIntoToken",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "takeFunds",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "addFundsToEscrow",
        "args": [
          {
            "name": "ebaTxn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "recieveNFT",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}