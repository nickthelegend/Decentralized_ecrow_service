{
  "hints": {
    "createApplication(string,string,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "submitBid(uint64,uint64,string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "acceptBid(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "sendFunds(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "confirm_dispatch(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "confirm_delivery_received()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "cancel_request()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "receive_order()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "product": {
          "type": "bytes",
          "key": "product"
        },
        "quantity": {
          "type": "bytes",
          "key": "quantity"
        },
        "requestCounter": {
          "type": "uint64",
          "key": "requestCounter"
        },
        "bidCounter": {
          "type": "uint64",
          "key": "bidCounter"
        },
        "deadline": {
          "type": "uint64",
          "key": "deadline"
        },
        "max_budget": {
          "type": "uint64",
          "key": "max_budget"
        },
        "creator": {
          "type": "bytes",
          "key": "creator"
        },
        "selected_vendor": {
          "type": "bytes",
          "key": "selected_vendor"
        },
        "delivery_status": {
          "type": "bytes",
          "key": "delivery_status"
        },
        "dispatch_date": {
          "type": "uint64",
          "key": "dispatch_date"
        },
        "recieved_date": {
          "type": "uint64",
          "key": "recieved_date"
        },
        "depositedAmount": {
          "type": "uint64",
          "key": "depositedAmount"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 5,
      "num_uints": 7
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "PurchaseRequest",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "product",
            "type": "string"
          },
          {
            "name": "quantity",
            "type": "string"
          },
          {
            "name": "deadline",
            "type": "uint64"
          },
          {
            "name": "max_budget",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "submitBid",
        "args": [
          {
            "name": "amount",
            "type": "uint64"
          },
          {
            "name": "deliveryTime",
            "type": "uint64"
          },
          {
            "name": "description",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "acceptBid",
        "args": [
          {
            "name": "vendorAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "sendFunds",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "confirm_dispatch",
        "args": [
          {
            "name": "companyAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "confirm_delivery_received",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "cancel_request",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "receive_order",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}